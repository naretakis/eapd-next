name: Security and Dependency Updates

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  security-audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: |
          npm audit --audit-level=moderate --json > audit-results.json || true

      - name: Check for high/critical vulnerabilities
        run: |
          HIGH_VULNS=$(cat audit-results.json | jq '.metadata.vulnerabilities.high // 0')
          CRITICAL_VULNS=$(cat audit-results.json | jq '.metadata.vulnerabilities.critical // 0')

          echo "High vulnerabilities: $HIGH_VULNS"
          echo "Critical vulnerabilities: $CRITICAL_VULNS"

          if [ "$HIGH_VULNS" -gt 0 ] || [ "$CRITICAL_VULNS" -gt 0 ]; then
            echo "⚠️ High or critical vulnerabilities found!"
            cat audit-results.json | jq '.advisories'
            exit 1
          else
            echo "✅ No high or critical vulnerabilities found"
          fi

      - name: Create security issue if vulnerabilities found
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const auditResults = JSON.parse(fs.readFileSync('audit-results.json', 'utf8'));

            const title = '🚨 Security Vulnerabilities Detected';
            const body = `
            ## Security Audit Results

            **High vulnerabilities:** ${auditResults.metadata.vulnerabilities.high || 0}
            **Critical vulnerabilities:** ${auditResults.metadata.vulnerabilities.critical || 0}

            ### Recommended Actions
            1. Review the vulnerabilities listed below
            2. Update affected packages using \`npm update\`
            3. For packages without fixes, consider alternatives
            4. Run \`npm audit fix\` to automatically fix issues where possible

            ### Audit Details
            \`\`\`json
            ${JSON.stringify(auditResults.advisories, null, 2)}
            \`\`\`

            This issue was automatically created by the security audit workflow.
            `;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'priority: high', 'needs-triage']
            });

  dependency-updates:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Check for outdated packages
        run: |
          npm outdated --json > outdated.json || true

      - name: Create dependency update PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let outdated = {};

            try {
              outdated = JSON.parse(fs.readFileSync('outdated.json', 'utf8'));
            } catch (e) {
              console.log('No outdated packages found');
              return;
            }

            if (Object.keys(outdated).length === 0) {
              console.log('All packages are up to date');
              return;
            }

            // Create a branch for dependency updates
            const branchName = `dependency-updates-${new Date().toISOString().split('T')[0]}`;

            try {
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/heads/${branchName}`,
                sha: context.sha
              });
              
              // Create PR body with outdated packages
              const packages = Object.entries(outdated).map(([name, info]) => 
                `- **${name}**: ${info.current} → ${info.latest}`
              ).join('\n');
              
              const body = `
              ## Automated Dependency Updates
              
              This PR updates the following packages to their latest versions:
              
              ${packages}
              
              ### Testing Checklist
              - [ ] Build passes
              - [ ] Tests pass
              - [ ] No breaking changes detected
              - [ ] Security audit passes
              
              This PR was automatically created by the dependency update workflow.
              Please review the changes and test thoroughly before merging.
              `;
              
              await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: '📦 Automated dependency updates',
                head: branchName,
                base: 'main',
                body: body,
                labels: ['dependencies', 'automated']
              });
              
            } catch (error) {
              console.log('Error creating PR:', error.message);
            }

  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
