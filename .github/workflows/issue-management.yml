name: Issue and PR Management

on:
  issues:
    types: [opened, labeled, assigned]
  pull_request:
    types: [opened, closed, ready_for_review]

jobs:
  manage-issues:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'
    steps:
      - name: Add to project
        uses: actions/add-to-project@v0.4.0
        with:
          project-url: https://github.com/users/${{ github.repository_owner }}/projects/1
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-assign labels based on title
        uses: actions/github-script@v6
        with:
          script: |
            const title = context.payload.issue.title.toLowerCase();
            const labels = [];

            // Auto-assign component labels based on title keywords
            if (title.includes('dashboard')) labels.push('component: dashboard');
            if (title.includes('editor')) labels.push('component: apd-editor');
            if (title.includes('template')) labels.push('component: templates');
            if (title.includes('export')) labels.push('component: export');
            if (title.includes('validation')) labels.push('component: validation');
            if (title.includes('storage') || title.includes('indexeddb')) labels.push('component: storage');

            // Auto-assign technical labels
            if (title.includes('accessibility') || title.includes('a11y')) labels.push('accessibility');
            if (title.includes('performance')) labels.push('performance');
            if (title.includes('security')) labels.push('security');
            if (title.includes('test')) labels.push('testing');

            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: labels
              });
            }

  manage-pull-requests:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Add PR to project
        uses: actions/add-to-project@v0.4.0
        with:
          project-url: https://github.com/users/${{ github.repository_owner }}/projects/1
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-assign labels to PR
        uses: actions/github-script@v6
        with:
          script: |
            const title = context.payload.pull_request.title.toLowerCase();
            const labels = ['ready-for-review'];

            // Auto-assign component labels based on title keywords
            if (title.includes('dashboard')) labels.push('component: dashboard');
            if (title.includes('editor')) labels.push('component: apd-editor');
            if (title.includes('template')) labels.push('component: templates');
            if (title.includes('export')) labels.push('component: export');
            if (title.includes('validation')) labels.push('component: validation');
            if (title.includes('storage') || title.includes('indexeddb')) labels.push('component: storage');

            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: labels
            });

      - name: Request review from team
        if: github.event.action == 'opened'
        uses: actions/github-script@v6
        with:
          script: |
            // Auto-request review from repository collaborators
            // This would need to be customized based on your team structure
            console.log('PR opened, review process initiated');
